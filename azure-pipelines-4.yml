# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- JanuaryClass

variables:
  acrName: 'acrtotalsamfancyacr'
  imageName: 'totalserve'
  k8sNamespace: 'default'
  k8sDeploymentName: 'deployment'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Test
  displayName: 'Test stage'
  jobs:
  - job: Test
    displayName: 'Test Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: NodeTool@0
      inputs:
        versionSpec: '21.x'
      displayName: 'Install Node.js'
    - script: npm ci
      displayName: Restore the packages
    

- stage: Build
  displayName: 'Build stage'
  dependsOn: Test
  condition: succeeded()
  jobs:
  - job: Build
    displayName: 'Build Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    
    - task: Docker@2
      displayName: Build an Image
      inputs:
        containerRegistry: 'Dockerconn'
        repository: '$(imageName)'
        command: 'buildAndPush'
        Dockerfile: 'dockerfile'

    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'Dockerconn'
    #     repository: '$(imageName)'
    #     command: 'push'
    #     Dockerfile: dockerfile
    
    
    # - script: docker build -f dockerfile -t $(acrName).azurecr.io/$(Build.Repository.Name):$(Build.BuildId)
    #   displayName: 'Build to ACR'
        
    # - script: docker push $(acrName).azurecr.io/$(Build.Repository.Name):$(Build.BuildId)
    #   displayName: 'Push to ACR'

- stage: Scan
  displayName: 'Scan Image'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: ScanImage
    displayName: 'Scan Image Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Login to ACR'
      inputs:
        containerRegistry: 'Dockerconn'
        repository: '$(imageName)'
        command: 'login'
    # - task: trivy@1
    #   inputs:
    #     version: 'latest'
    #     loginDockerConfig: true
    #     image: '$(acrName).azurecr.io/$(imageName):$(Build.BuildId)'
    #     ignoreUnfixed: true
    #   displayName: Scan Docker image with Trivy
  
- stage: Deploy
  displayName: 'Deploy stage'
  jobs:
    - deployment: Deploy
      displayName: 'Deploy Job'
      environment: 'production'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
       runOnce:
         deploy:
          steps:
            - checkout: self
            - task: Kubernetes@1
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscriptionEndpoint: 'Azure subscription 1 (0fadb926-6d1e-4cd8-8dc3-642b929be07f)'
                azureResourceGroup: 'samfanctrainig_group'
                kubernetesCluster: 'total-cluster'
                namespace: 'default'
                command: 'apply'
                secretType: 'dockerRegistry'
                containerRegistryType: 'Azure Container Registry'
                azureSubscriptionEndpointForSecrets: 'Azure subscription 1 (0fadb926-6d1e-4cd8-8dc3-642b929be07f)'
                azureContainerRegistry: 'acrtotalserve.azurecr.io'
              displayName: 'Deploy Deployment to AKS'

